/* CRIAÇÃO DAS TABELAS */

CREATE DATABASE CURSOS

CREATE TABLE aluno(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(255),
	data_nascimento DATE,
	cpf NUMERIC NOT NULL UNIQUE
	
);

CREATE TABLE categoria(
	id SERIAL PRIMARY KEY,
	categoria VARCHAR(255)
);

CREATE TABLE curso(
	id SERIAL PRIMARY KEY,
	nome VARCHAR (255) UNIQUE,
	categoria_id INTEGER,
	FOREIGN KEY (categoria_id)
	REFERENCES categoria(id)
);

/* CRIANDO UMA TABELA COM REFERENCIA A VALORES DE OUTRA TABELA (CHAVE ESTRANGEIRA) */

CREATE TABLE aluno_curso (
	aluno_id INTEGER NOT NULL,
	curso_id INTEGER NOT NULL,
	PRIMARY KEY (aluno_id, curso_id),
	FOREIGN KEY (aluno_id) 
	REFERENCES aluno(id),
	FOREIGN KEY (curso_id) 
	REFERENCES curso(id)
);

INSERT INTO aluno (nome,data_nascimento,cpf) VALUES(
	'Josué Assis', 
	'1999-07-12',
	12950091610
);


INSERT INTO aluno (nome,data_nascimento,cpf) VALUES(
	'Josué Ferreira',
	'1998-03-10',
	07659034073
),(
	'Edgar Marcedo',
	'2001-03-01',
	23866728085
),(
	'Tiago Nogueira',
	'2002-09-20',
	31151207020
);


INSERT INTO categoria VALUES 
	(1,'FRONT-END'),(2,'PROGRAMAÇÃO'),
	(3,'BANCO DE DADOS'),(4,'ADMINISTRAÇÃO');

INSERT INTO curso VALUES 
	(1,'Python',2),(2,'JAVA',2),(3,'HTML',1),
	(4,'CSS',1),(5,'MYSQL',3),(6,'POSTGRES',3),
	(7,'RUBY',2),(8,'Gestão de Projetos',4),
	(9,'JavaScript',1);



INSERT INTO aluno_curso VALUES
(1,1),(1,6),(1,8);

INSERT INTO aluno_curso VALUES
(1,1),(1,6),(1,8),(2,2),(2,5),(3,3),(3,4),(3,8),(4,5),(4,7);


/* MOSTRA TODOS OS ALUNOS E OS CURSOS QUE ESTÃO CADASTRADOS RESPECTIVAMENTES*/

SELECT * FROM aluno_curso
	JOIN curso on curso.id = aluno_curso.curso_id
	JOIN aluno on aluno.id = aluno_curso.aluno_id
;

/* MOSTRA O(OS) ALUNO(OS) E EM QUANTOS CURSOS ESTÁ CADASTRADO */

SELECT aluno.nome, COUNT(curso.id) as "numero de cursos" FROM aluno_curso
	JOIN curso on curso.id = aluno_curso.curso_id
	JOIN aluno on aluno.id = aluno_curso.aluno_id
GROUP BY 1;

/* UTILIZAÇÃO DE FILTRO, ONDE MOSTRARÁ VALORES DIFERENTES DE ID = 1 E COM VALORES OS QUAIS O NOME NÃO SE INICIA COM 'J' */

SELECT nome FROM curso WHERE categoria_id <> 1 AND nome NOT LIKE 'J%';

/* ATUALIZAÇÃO DE DADOS USANDO 'UPDATE' */

UPDATE curso SET nome = 'POSTGRESQL' WHERE nome = 'POSTGRES';

/* MOSTRA A CATEGORIA ONDE O NUMERO DE ALUNOS QUE FAZEM O CURSO É SUPERIOR A 2 */

SELECT categoria FROM (
	SELECT categoria.nome AS categoria, count(curso.id) AS numero_cursos FROM categoria
		JOIN curso on curso.categoria_id = categoria.id
GROUP BY 1
) AS categoria_cursos WHERE numero_cursos >= 2 ;

/* QUERY SQL PARA RENOMEAÇÂO DE TABELA */

ALTER TABLE aluno RENAME to alunos;

/* QUERY SQL PARA RENOMEAÇÂO DE COLUNA DE UMA TABELA */

ALTER TABLE aluno RENAME cpf to DOCUMENTO_CPF;
